{"version":3,"sources":["App.js","Tutorial.js","Example.js","serviceWorker.js","index.js"],"names":["PIXI","SCALE_MODE","NEAREST","ROUND_PIXELS","ArraySet","value","toString","Set","ArrayMap","key","Map","App","useState","width","window","innerWidth","height","innerHeight","backgroundColor","resolution","antialias","app","useEffect","FontFaceObserver","weight","load","then","document","getElementById","appendChild","view","level","start","container","stage","addChild","pegs","empty","from","peg","cross","current","corners","i","x","y","Math","floor","includes","pegSprite","anchor","set","interactive","buttonMode","on","onDragStart","onDragMove","onDragEnd","add","emptySprite","screen","pivot","style","fill","fontFamily","fontWeight","align","status","length","timer","originX","originY","round","count","time","interval","setInterval","min","sec","text","clearInterval","score","stats","next","onNextStart","onNextEnd","event","this","data","alpha","position","getLocalPosition","parent","moved","destX","abs","destY","distX","distY","has","removeChild","get","delete","endGame","pos","rMid","rEnd","lMid","lEnd","uMid","uEnd","dMid","dEnd","destroy","children","texture","baseTexture","stop","catch","className","id","Tutorial","setStart","ItemCard","props","Card","margin","Img","objectFit","variant","src","image","Body","Title","color","fontSize","title","Text","textAlign","button","content","Button","onClick","Footer","item","Carousel","Item","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.7ee083db.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport './index.css';\nimport * as PIXI from 'pixi.js';\nimport * as FontFaceObserver from 'fontfaceobserver';\n\nPIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\nPIXI.settings.ROUND_PIXELS = true;\n\nclass ArraySet extends Set {\n  add(value) {\n    return super.add(value.toString());\n  }\n\n  has(value) {\n    return super.has(value.toString());\n  }\n}\n\nclass ArrayMap extends Map {\n  set(key, value) {\n    return super.set(key.toString(), value);\n  }\n\n  has(key) {\n    return super.has(key.toString());\n  }\n\n  get(key) {\n    return super.get(key.toString());\n  }\n\n  delete(key) {\n    return super.delete(key.toString());\n  }\n}\n\nfunction App() {\n  const [app, setApp] = useState(new PIXI.Application({ \n    width: window.innerWidth,\n    height: window.innerHeight,\n    backgroundColor: 0x131342,\n    resolution: 1,\n    antialias: true\n  }));\n\n  useEffect(() => {\n    const font = new FontFaceObserver('DMSans', {\n      weight: 'bold'\n    });\n  \n    font.load().then(function () {\n      document.getElementById('container').appendChild(app.view);\n      let level = 1;\n      start();\n\n      function start() {\n        const container = new PIXI.Container();\n        app.stage.addChild(container);\n\n        const empty = PIXI.Texture.from('./empty.png');\n        const peg = PIXI.Texture.from('./peg.png');\n        \n        let cross = new ArraySet();\n        let current = new ArrayMap();\n        const corners = [0, 1, 5, 6, 7, 8, 12, 13, 35, 36, 40, 41, 42, 43, 47, 48];\n        let pegs;\n        \n        if (level === 1) {\n          pegs = [10, 16, 22, 18, 25];\n        }\n        else if (level === 2) {\n          pegs = [10, 16, 18, 22, 24, 26, 30, 32, 38, 45];\n        }\n        else {\n          pegs = [2, 3, 4, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 44, 45, 46];\n        }\n\n        for (let i = 0; i < 49; ++i) {\n          const x = (i % 7) * 95;\n          const y = Math.floor(i / 7) * 95;\n\n          if (!corners.includes(i)) {\n            if (pegs.includes(i)) {\n              const pegSprite = new PIXI.Sprite(peg);\n              pegSprite.anchor.set(0.5);\n              pegSprite.x = x;\n              pegSprite.y = y;\n              pegSprite.interactive = true;\n              pegSprite.buttonMode = true;\n              pegSprite\n                .on('mousedown', onDragStart)\n                .on('mousemove', onDragMove)\n                .on('mouseup', onDragEnd)\n                .on('mouseupoutside', onDragEnd)\n                .on('touchstart', onDragStart)\n                .on('touchmove', onDragMove)\n                .on('touchend', onDragEnd)\n                .on('touchendoutside', onDragEnd);\n              container.addChild(pegSprite);\n      \n              current.set([x, y], pegSprite);\n            }\n\n            cross.add([x, y]);\n\n            const emptySprite = new PIXI.Sprite(empty);\n            emptySprite.anchor.set(0.5);\n            emptySprite.x = x;\n            emptySprite.y = y;\n            container.addChild(emptySprite);\n          }\n        }\n\n        container.x = app.screen.width / 2;\n        container.y = app.screen.height / 2;\n        container.pivot.x = 570 / 2;\n        container.pivot.y = 570 / 2;\n\n        const style = new PIXI.TextStyle({\n          fill: '#FFFFFF',\n          fontFamily: 'DMSans',\n          fontWeight: 'bold',\n          align: 'center'\n        });\n\n        const status = new PIXI.Text('Pegs\\n' + pegs.length.toString() + ' of ' + pegs.length.toString(), style);\n        status.anchor.set(0.5);\n        status.x = 570;\n        status.y = -95;\n        container.addChild(status);\n\n        const timer = new PIXI.Text('Time\\n3:00', style);\n        timer.anchor.set(0.5);\n        timer.x = 285;\n        timer.y = -95;\n        container.addChild(timer);\n\n        const round = new PIXI.Text('Round\\n' + level + ' of 3', style);\n        round.anchor.set(0.5);\n        round.x = 0;\n        round.y = -95;\n        container.addChild(round);\n\n        let originX, originY;\n        let count = pegs.length;\n        let time = 180;\n\n        const interval = setInterval(() => {\n          --time;\n          const min = Math.floor(time / 60).toString();\n          const sec = (time % 60).toString();\n          timer.text = (sec < 10) ? 'Time\\n' + min + ':0' + sec : 'Time\\n' + min + ':' + sec;\n\n          if (time === 0) {\n            clearInterval(interval);\n\n            const score = Math.round(((pegs.length - count) / (pegs.length - 1)) * 100);\n            const stats = new PIXI.Text('Score\\n' + score.toString() + '%', style);\n            stats.anchor.set(0.5);\n            stats.x = 285;\n            stats.y = 665;\n            container.addChild(stats);\n\n            if (level !== 3) {\n              const next = new PIXI.Text('Continue', style);\n              next.anchor.set(0.5);\n              next.x = 570;\n              next.y = 665;\n              next.interactive = true;\n              next.buttonMode = true;\n              next\n                .on('mousedown', onNextStart)\n                .on('mouseup', onNextEnd)\n                .on('touchstart', onNextStart)\n                .on('touchend', onNextEnd)\n                container.addChild(next);\n            }\n\n            for (let [pos, sprite] of current) {\n              sprite.interactive = false;\n            }\n          }\n        }, 1000);\n\n        function onDragStart(event) {\n          this.data = event.data;\n          this.alpha = 0.5;\n          originX = this.x;\n          originY = this.y;\n        }\n\n        function onDragMove() {\n          if (this.data) {\n            const position = this.data.getLocalPosition(this.parent);\n            this.x = position.x;\n            this.y = position.y;\n          }\n        }\n\n        function onDragEnd() {\n          if (this.data) {\n            let moved = false;\n\n            const destX = Math.abs(Math.round(this.x / 95) * 95);\n            const destY = Math.abs(Math.round(this.y / 95) * 95);\n\n            const distX = Math.abs(destX - originX);\n            const distY = Math.abs(destY - originY);\n\n            if (cross.has([destX, destY])) {\n              if (distX === 190 && distY === 0) { //Horizontal\n                if (destX > originX) { //Right\n                  if (current.has([originX + 95, originY]) && !current.has([destX, destY])) {\n                    this.x = destX;\n                    this.y = destY;\n                    \n                    container.removeChild(current.get([originX + 95, originY]));\n                    current.delete([originX, originY]);\n                    current.delete([originX + 95, originY]);\n                    current.set([destX, destY], this);\n\n                    --count;\n                    status.text = 'Pegs\\n' + count.toString() + ' of ' + pegs.length.toString();\n                    moved = true;\n                  }\n                  else {\n                    this.x = originX;\n                    this.y = originY;\n                  }\n                }\n                else { //Left\n                  if (current.has([originX - 95, originY]) && !current.has([destX, destY])) {\n                    this.x = destX;\n                    this.y = destY;\n\n                    container.removeChild(current.get([originX - 95, originY]));\n                    current.delete([originX, originY]);\n                    current.delete([originX - 95, originY]);\n                    current.set([destX, destY], this);\n\n                    --count;\n                    status.text = 'Pegs\\n' + count.toString() + ' of ' + pegs.length.toString();\n                    moved = true;\n                  }\n                  else {\n                    this.x = originX;\n                    this.y = originY;\n                  }\n                }\n              }\n              else if (distX === 0 && distY === 190) { //Vertical\n                if (destY > originY) { //Up\n                  if (current.has([originX, originY + 95]) && !current.has([destX, destY])) {\n                    this.x = destX;\n                    this.y = destY;\n\n                    container.removeChild(current.get([originX, originY + 95]));\n                    current.delete([originX, originY]);\n                    current.delete([originX, originY + 95]);\n                    current.set([destX, destY], this);\n\n                    --count;\n                    status.text = 'Pegs\\n' + count.toString() + ' of ' + pegs.length.toString();\n                    moved = true;\n                  }\n                  else {\n                    this.x = originX;\n                    this.y = originY;\n                  }\n                }\n                else { //Down\n                  if (current.has([originX, originY - 95]) && !current.has([destX, destY])) {\n                    this.x = destX;\n                    this.y = destY;\n\n                    container.removeChild(current.get([originX, originY - 95]));\n                    current.delete([originX, originY]);\n                    current.delete([originX, originY - 95]);\n                    current.set([destX, destY], this);\n\n                    --count;\n                    status.text = 'Pegs\\n' + count.toString() + ' of ' + pegs.length.toString();\n                    moved = true;\n                  }\n                  else {\n                    this.x = originX;\n                    this.y = originY;\n                  }\n                }\n              }\n              else {\n                this.x = originX;\n                this.y = originY;\n              }\n            }\n            else {\n              this.x = originX;\n              this.y = originY;\n            }\n\n            if (moved) {\n              let endGame = true;\n\n              for (let [key, value] of current) {\n                const pos = value.position;\n                const rMid = [pos.x + 95, pos.y], rEnd = [pos.x + 190, pos.y];\n                const lMid = [pos.x - 95, pos.y], lEnd = [pos.x - 190, pos.y];\n                const uMid = [pos.x, pos.y + 95], uEnd = [pos.x, pos.y + 190];\n                const dMid = [pos.x, pos.y - 95], dEnd = [pos.x, pos.y - 190];\n                \n                if (cross.has(rMid) && cross.has(rEnd)) {\n                  if (current.has(rMid) && !current.has(rEnd)) {\n                    endGame = false;\n                    break;\n                  }\n                }\n\n                if (cross.has(lMid) && cross.has(lEnd)) {\n                  if (current.has(lMid) && !current.has(lEnd)) {\n                    endGame = false;\n                    break;\n                  }\n                }\n\n                if (cross.has(uMid) && cross.has(uEnd)) {\n                  if (current.has(uMid) && !current.has(uEnd)) {\n                    endGame = false;\n                    break;\n                  }\n                }\n\n                if (cross.has(dMid) && cross.has(dEnd)) {\n                  if (current.has(dMid) && !current.has(dEnd)) {\n                    endGame = false;\n                    break;\n                  }\n                }\n              }\n\n              if (endGame) {\n                clearInterval(interval);\n\n                const score = Math.round(((pegs.length - count) / (pegs.length - 1)) * 100);\n                const stats = new PIXI.Text('Score\\n' + score.toString() + '%', style);\n                stats.anchor.set(0.5);\n                stats.x = 285;\n                stats.y = 665;\n                container.addChild(stats);\n\n                if (level !== 3) {\n                  const next = new PIXI.Text('Continue', style);\n                  next.anchor.set(0.5);\n                  next.x = 570;\n                  next.y = 665;\n                  next.interactive = true;\n                  next.buttonMode = true;\n                  next\n                    .on('mousedown', onNextStart)\n                    .on('mouseup', onNextEnd)\n                    .on('touchstart', onNextStart)\n                    .on('touchend', onNextEnd)\n                    container.addChild(next);\n                }\n\n                for (let [pos, sprite] of current) {\n                  sprite.interactive = false;\n                }\n              }\n            }\n\n            this.data = null;\n            this.alpha = 1;\n          }\n        }\n\n        function onNextStart() {\n          this.alpha = 0.5;\n        }\n\n        function onNextEnd() {\n          this.alpha = 1;\n\n          container.destroy({\n            children: true,\n            texture: true,\n            baseTexture: true\n          });\n\n          app.stage.removeChild(container);\n\n          ++level;\n          start();\n        }\n      }\n\n      return () => {\n        app.destroy({\n          children: true,\n          texture: true,\n          baseTexture: true\n        });\n\n        app.stop();\n      }\n    }).catch(function () {\n      \n    });\n  }, [app]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"container\" style={{ width: window.innerWidth, height: window.innerHeight, backgroundColor: \"#131342\" }} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import React, { useState} from 'react';\nimport './Tutorial.css';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nfunction Tutorial() {\n    const [start, setStart] = useState(false);\n\n    function ItemCard(props) {\n        const onclick = () => {\n            setStart(true);\n        }\n    \n        return (\n            <Card style={{ width: 330, height: 440, margin: 'auto' }} >\n                <Card.Img style={{objectFit: 'contain'}} variant=\"top\" src={props.image} />\n                <Card.Body>\n                    <Card.Title style={{ color: '#212529', fontSize: 20, fontFamily: 'DMSans', fontWeight: 'bold'}}> {props.title} </Card.Title>\n                    <Card.Text style={{ color: '#212529', fontSize: 16, fontFamily: 'DMSans', fontWeight: 'normal', textAlign: 'left' }}>\n                        {!props.button ? props.content : <div> <p>{props.content}</p> {<Button onClick={onclick} variant=\"primary\">Start Game!</Button>} </div>}\n                    </Card.Text>\n                </Card.Body>\n                <Card.Footer style={{ color: '#6c757d', fontSize: 16, fontFamily: 'DMSans', fontWeight: 'normal' }}>\n                    <small className=\"text-muted\"> Card {props.item} of 3 </small>\n                </Card.Footer>\n            </Card>\n        );\n    }\n\n    if (start) {\n        return (\n            <App />\n        );\n    }\n    else {\n        return (\n            <div className=\"Tutorial\">\n                <header className=\"Tutorial-header\">\n                    <div id=\"container\" style={{ width: window.innerWidth, margin: 'auto'}} >\n                        <Carousel interval={null} style={{ width: 500, height: 500, margin: 'auto'}}>\n                            <Carousel.Item>\n                                <ItemCard image='./example.gif' button={false} title='How to Play?' item='1'\n                                    content='\n                                    You are allowed to jump over pegs horizontally or vertically.\n                                    But you can only jump over a peg into a hole that is two positions away.\n                                    The game is won when there is 1 peg in the center of the board.\n                                    That&apos;s it!'\n                                />\n                            </Carousel.Item>\n                            <Carousel.Item>\n                                <ItemCard image='./watch.jpg' button={false} title='What to Expect?' item='2'\n                                    content='There will be 3 rounds.\n                                    Each round increases in difficulty.\n                                    There is a time limit of 3 minutes.\n                                    If you go over time, the game is stopped.\n                                    The game is also stopped when you run out of possible moves.'\n                                />\n                            </Carousel.Item>\n                            <Carousel.Item>\n                                <ItemCard image='./peg_solitaire.jpg' button={true} title='Let&apos;s Play!' item='3'\n                                    content='Review the cards again if you are uncertain of the rules.\n                                    Otherwise, click the button below to begin the first round of the game!'\n                                />\n                            </Carousel.Item>\n                        </Carousel>\n                    </div>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default Tutorial;","import React, { useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\n\nPIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\nPIXI.settings.ROUND_PIXELS = true;\n\nclass ArraySet extends Set {\n    add(value) {\n      return super.add(value.toString());\n    }\n  \n    has(value) {\n      return super.has(value.toString());\n    }\n  }\n  \n  class ArrayMap extends Map {\n    set(key, value) {\n      return super.set(key.toString(), value);\n    }\n  \n    has(key) {\n      return super.has(key.toString());\n    }\n  \n    get(key) {\n      return super.get(key.toString());\n    }\n  \n    delete(key) {\n      return super.delete(key.toString());\n    }\n  }\n\nfunction Example() {\n    const [app, setApp] = useState(new PIXI.Application({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        backgroundColor: 0x131342,\n        resolution: 1,\n        antialias: true\n    }));\n\n    useEffect(() => {\n        document.getElementById('container').appendChild(app.view);\n\n        const container = new PIXI.Container();\n        app.stage.addChild(container);\n\n        const empty = PIXI.Texture.from('./tut_e.svg');\n        const peg = PIXI.Texture.from('./tut.svg');\n\n        let cross = new ArraySet();\n        let current = new ArrayMap();\n        let pegs = [1, 2];\n\n        for (let i = 0; i < 3; ++i) {\n            const x = (i % 7) * 395;\n            const y = Math.floor(i / 7) * 395;\n\n            if (pegs.includes(i)) {\n                const pegSprite = new PIXI.Sprite(peg);\n                pegSprite.anchor.set(0.5);\n                pegSprite.x = x;\n                pegSprite.y = y;\n                pegSprite.interactive = true;\n                pegSprite.buttonMode = true;\n                pegSprite\n                    .on('mousedown', onDragStart)\n                    .on('mousemove', onDragMove)\n                    .on('mouseup', onDragEnd)\n                    .on('mouseupoutside', onDragEnd)\n                    .on('touchstart', onDragStart)\n                    .on('touchmove', onDragMove)\n                    .on('touchend', onDragEnd)\n                    .on('touchendoutside', onDragEnd);\n                container.addChild(pegSprite);\n\n                current.set([x, y], pegSprite);\n            }\n\n            cross.add([x, y]);\n\n            const emptySprite = new PIXI.Sprite(empty);\n            emptySprite.anchor.set(0.5);\n            emptySprite.x = x;\n            emptySprite.y = y;\n            container.addChild(emptySprite);\n        }\n\n        container.x = app.screen.width / 2;\n        container.y = app.screen.height / 2;\n        container.pivot.x = container.width / 2;\n        container.pivot.y = container.height / 2;\n\n        let originX, originY;\n\n        function onDragStart(event) {\n            this.data = event.data;\n            this.alpha = 0.5;\n            originX = this.x;\n            originY = this.y;\n        }\n\n        function onDragMove() {\n            if (this.data) {\n                const position = this.data.getLocalPosition(this.parent);\n                this.x = position.x;\n                this.y = position.y;\n            }\n        }\n\n        function onDragEnd() {\n            if (this.data) {\n                let moved = false;\n\n                const destX = Math.abs(Math.round(this.x / 395) * 395);\n                const destY = Math.abs(Math.round(this.y / 395) * 395);\n\n                const distX = Math.abs(destX - originX);\n                const distY = Math.abs(destY - originY);\n\n                if (cross.has([destX, destY])) {\n                    if (distX === 790 && distY === 0) { //Horizontal\n                        if (!(destX > originX)) { //Left\n                            if (current.has([originX - 395, originY]) && !current.has([destX, destY])) {\n                                this.x = destX;\n                                this.y = destY;\n\n                                container.removeChild(current.get([originX - 395, originY]));\n                                current.delete([originX, originY]);\n                                current.delete([originX - 395, originY]);\n                                current.set([destX, destY], this);\n\n                                moved = true;\n                            }\n                            else {\n                                this.x = originX;\n                                this.y = originY;\n                            }\n                        }\n                    }\n                    else {\n                        this.x = originX;\n                        this.y = originY;\n                    }\n                }\n                else {\n                    this.x = originX;\n                    this.y = originY;\n                }\n\n                if (moved) {\n                    console.log('Aw Yeah!');\n                }\n\n                this.data = null;\n                this.alpha = 1;\n            }\n        }\n\n        return () => {\n            app.destroy({\n                children: true,\n                texture: true,\n                baseTexture: true\n            });\n\n            app.stop();\n        }\n\n    }, [app]);\n\n    return (\n        <div id=\"container\" style={{ width: window.innerWidth, height: window.innerHeight, backgroundColor: \"#131342\" }} />\n    );\n}\n\nexport default Example;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Tutorial from './Tutorial';\nimport Example from './Example';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Tutorial />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}